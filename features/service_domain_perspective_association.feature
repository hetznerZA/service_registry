This service registry specification supports the Hetzner minimal viable SOA architecture. This architecture takes the view that Hetzner prefers to deploy services on web applications, described by WADL. As such, services have definitions as WADL resources and live on service components to which a collection of such resources have been deployed. The association of services to domain perspectives then take place via the mechanics of web application deployment. Since domain perspectives are a form of SOA virtual service, this supports aspects of a higher maturity SOA paradigm within the constraints of a miminal architecture, in line with the company's fledgling experience in SOA (see implementation below.) Tying the services to web applications strongly here by design is meant to reflect this minimal approach.

In future, when Hetzner is ready for virtualized services and OSIMM maturity levels 6 and 7, this decision can be changed. At that point, services should be represented by WSDL definitions and deployed to a cloud of dynamic service components. The concept of domain perspectives then becomes one of ownership, with the business key of the service set to that of the domain perspective.

As an even further step to SOA maturity, the business key of services can be set to the top-level 'Hetzner' company, and all functional associations between services (there-by forming domain perspectives) can be done in virtual services. I.e. the virtual services fully become the domain perspectives.

In the interim the minimal modelling how-ever allows Hetzner to identify and define domain perspectives, without the need to build virtual services. This is important, as the domain perspectives can be discovered, and Hetzner can change its mind about them in configuration space (re-deploying services to other service components, and associating service components to other domain perspectives,) without paying the much higher cost associated with developing/changing virtual services.

Implementation in juddi has service components registered as services. These service components are tied to domain perspectives (mapped in juddi as businesses for the containment.) Services (non-service components) are tied to the top-level 'Hetzner' business and associated with service components through a URI in the service bindings. The service component's base URI is tied to the service component as its only binding. Service components can belong to only one domain perspectice. Services can be associated with multiple service components through the binding URIs. In this way, services can be associated with more than one domain perspective, by walking its binding URIs, and for each tracing that back to the service component and then the domain perspective the service component is bound to.
