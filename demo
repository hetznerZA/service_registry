bundle exec irb

require 'soar_sr'

credentials = { 'username' => 'uddi', 'password' => 'uddi' }
@soar_sr = SoarSr::ServiceRegistry.new('http://localhost:8080', 'hetzner.co.za', 'hetzner', credentials)
ds = @soar_sr.domain_perspectives
sv = @soar_sr.services
sc = @soar_sr.service_components
sd = @soar_sr.service_definitions
ts = @soar_sr.teams
as = @soar_sr.associations
ss = @soar_sr.search

ds.delete_all_domain_perspectives
ds.list_domain_perspectives
ds.domain_perspective_registered?('my domain')
ds.register_domain_perspective('my domain')
ds.domain_perspective_registered?('my domain')
ds.deregister_domain_perspective('my domain')

sv.register_service({'name' => 'my service', 'description' => 'a new service', 'definition' => 'http://de.finiti.on'})
sv.service_registered?('my service')
sv.add_service_uri('my service', 'http://one-uri.com/my_service')
sv.add_service_uri('my service', 'http://find-me-here.com/my_service')
sv.remove_uri_from_service('my service', 'http://one-uri.com/my_service')
sv.service_uris('my service')
sv.configure_meta_for_service('my service', {'some' => 'meta'})
sv.meta_for_service('my service')
sv.service_by_name('my service')
sv.deregister_service('my service')

sc.delete_all_service_components
sc.list_service_components
sc.register_service_component('my sc')
sc.service_component_registered?('my sc')
sc.configure_service_component_uri('my sc', 'http://my-sc.com')
sc.service_component_uri('my sc')
sc.deregister_service_component('my sc')

sd.service_definition_for_service('my service')
sd.deregister_service_definition('my service')
sd.service_definition_for_service('my service')
sd.register_service_definition('my service', 'http://github.com/myservice/def.wadl')
sd.service_definition_for_service('my service')

ts.team_registered?('my team')
ts.register_team('my team')
ts.team_registered?('my team')
ts.deregister_team('my team')
ts.team_registered?('my team')

ds.register_domain_perspective('my domain')
as.delete_all_domain_perspective_associations('my domain')
sc.register_service_component('my sc')
as.associate_service_component_with_domain_perspective('my sc', 'my domain')
as.service_component_has_domain_perspective_associations?('my sc')
as.domain_perspective_associations('my domain')
as.domain_perspective_has_associations?('my domain')
as.disassociate_service_component_from_domain_perspective('my domain', 'my sc')
as.service_component_has_domain_perspective_associations?('my sc')
as.domain_perspective_has_associations?('my domain')

ds.register_domain_perspective('my domain')
as.delete_all_domain_perspective_associations('my domain')
sv.register_service({'name' => 'my service', 'description' => 'a new service', 'definition' => 'http://de.finiti.on'})
as.associate_service_with_domain_perspective('my service', 'my domain')
as.domain_perspective_has_associations?('my domain')
as.domain_perspective_associations('my domain')
as.disassociate_service_from_domain_perspective('my domain', 'my service')
as.domain_perspective_associations('my domain')

sv.register_service({'name' => 'search me', 'description' => 'pretty please', 'definition' => 'http://de.finiti.on'})
sv.add_service_uri('search me', 'https://this.is.another.one/ybo')
sv.add_service_uri('search me', 'http://some.where.net/smoothies')
sv.service_uris('search me')
sv.remove_uri_from_service('search me', 'https://this.is.another.one/ybo')
ss.search_for_service('search')
ss.search_for_service('please')
ss.search_for_service('ti.on')
ds.register_domain_perspective('my domain')
as.associate_service_with_domain_perspective('search me', 'my domain')
ss.search_domain_perspective('my domain', 'search')


